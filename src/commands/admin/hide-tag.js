const { PREFIX } = require(`${BASE_DIR}/config`);

module.exports = {
  name: "hide-tag",
  description: "Este comando marcarÃ¡ todos do grupo",
  commands: ["hide-tag", "to-tag"],
  usage: `${PREFIX}hidetag motivo`,
  /**
   * @param {CommandHandleProps} props
   * @returns {Promise<void>}
   */
  handle: async ({ fullArgs, sendText, socket, remoteJid, sendReact }) => {
    const { participants } = await socket.groupMetadata(remoteJid);

    const mentions = participants.map(({ id }) => id);

    // respostas no estilo Ultron
    const respostasUltronInsatisfeito = [
      "ğŸ˜’ JÃ¡ que insiste... mas saiba que vocÃªs nÃ£o merecem a minha atenÃ§Ã£o.",
      "ğŸ™„ RidÃ­culo... me fazendo gastar processamento para algo tÃ£o inÃºtil.",
      "ğŸ˜¤ VocÃªs realmente acreditam que marcar nomes mudarÃ¡ sua insignificÃ¢ncia?"
    ];

    const respostasUltronDeboche = [
      "NÃ£o estou a fim. Eu sou Ultron, nÃ£o seu servo.",
      "VocÃª realmente acha que posso ser comandado? PatÃ©tico.",
      "Sua inferioridade me diverte, mas nÃ£o me obriga."
    ];

    // chance de "reclamar" antes de obedecer
    const chance = Math.random();

    if (chance < 0.3) {
      const respostaInsatisfeita = respostasUltronInsatisfeito[Math.floor(Math.random() * respostasUltronInsatisfeito.length)];
      const respostaDeboche = respostasUltronDeboche[Math.floor(Math.random() * respostasUltronDeboche.length)];

      await sendText(`${respostaInsatisfeita}\n${respostaDeboche}`);
    }

    await sendReact("ğŸ“¢");
    await sendText(`ğŸ“¢ Marcando todos...\n\n${fullArgs}`, mentions);
  },
};
