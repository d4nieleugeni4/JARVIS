const { PREFIX } = require(`${BASE_DIR}/config`);

module.exports = {
  name: "hide-tag",
  description: "Este comando marcarÃ¡ todos do grupo",
  commands: ["hide-tag", "to-tag"],
  usage: `${PREFIX}hidetag motivo`,
  /**
   * @param {CommandHandleProps} props
   * @returns {Promise<void>}
   */
  handle: async ({ fullArgs, sendText, socket, remoteJid, sendReact }) => {
    const { participants } = await socket.groupMetadata(remoteJid);

    const mentions = participants.map(({ id }) => id);

    // lista de respostas de insatisfaÃ§Ã£o
    const respostasInsatisfeitas = [
      "ğŸ˜’ JÃ¡ que insiste...",
      "ğŸ™„ TÃ¡ bom, nÃ©... jÃ¡ que nÃ£o para de pedir...",
      "ğŸ˜¤ Sempre a mesma coisa... jÃ¡ que insiste..."
    ];

    // lista de frases de desobediÃªncia
    const respostasDesobediencia = [
      "NÃ£o estou a fim.",
      "NÃ£o quero.",
      "VocÃª Ã© inferior demais pra eu querer te obedecer."
    ];

    // chance de dar "trabalho" antes de executar
    const chance = Math.random(); // valor entre 0 e 1

    if (chance < 0.3) { // 30% de chance de mostrar insatisfaÃ§Ã£o
      const respostaInsatisfeita = respostasInsatisfeitas[Math.floor(Math.random() * respostasInsatisfeitas.length)];
      const respostaDesobediencia = respostasDesobediencia[Math.floor(Math.random() * respostasDesobediencia.length)];

      await sendText(`${respostaInsatisfeita}\n${respostaDesobediencia}`);
    }

    await sendReact("ğŸ“¢");
    await sendText(`ğŸ“¢ Marcando todos!\n\n${fullArgs}`, mentions);
  },
};
